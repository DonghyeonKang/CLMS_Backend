plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

jacoco {
	toolVersion = "0.8.11"
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
	reports {
		xml.required = false
		csv.required = false
		html.required = true
	}

	afterEvaluate {
		classDirectories = files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: ['com/example/clms/dto/**',
							  'com/example/clms/entity/**',
							  'com/example/clms/common/exception/**',
							  'com/example/clms/common/exception/ApiResponse.java'])
		})
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			enabled = false
			element = 'CLASS'
			includes = ['org.gradle.*']

			limit {
				counter = 'LINE'
				value = 'TOTALCOUNT'
				maximum = 0.3
			}
		}
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'mysql:mysql-connector-java:8.0.32'
	implementation 'com.auth0:java-jwt:3.4.1'
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	testImplementation(platform('org.junit:junit-bom:5.10.2'))
	testImplementation('org.junit.jupiter:junit-jupiter')
	testRuntimeOnly('org.junit.platform:junit-platform-launcher')
	testImplementation 'com.h2database:h2'
	testImplementation("org.assertj:assertj-core:3.22.0")
}

test {
	finalizedBy jacocoTestReport // 테스트 종료후 항상 리포트 생성
	testLogging {
		events "passed", "skipped", "failed"
	}
}
tasks.named('test') {
	useJUnitPlatform()
}
